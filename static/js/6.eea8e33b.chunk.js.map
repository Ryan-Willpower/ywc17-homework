{"version":3,"sources":["static/Footer/footer.webp","components/hamburger.tsx","components/navbar.tsx"],"names":["module","exports","HamburgerMain","styled","div","isOpen","Hamburger","state","onClick","setOpen","NavbarMain","browserQueryRule","largePhone","Navbar","navbarItems","useState","src","Logo","alt","className","map","item","key","label","href"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,qC,0nBCK3C,IAAMC,EAAgBC,IAAOC,IAAV,KAeN,qBAAGC,OAAuB,OAAS,OAC7B,qBAAGA,OACL,iBAAmB,kBAKtB,qBAAGA,OAAuB,QAAU,OACjC,qBAAGA,OAAuB,IAAM,OAIpC,qBAAGA,OAAuB,OAAS,UAC7B,qBAAGA,OACL,kBAAoB,kBAKxBC,EAAsC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpD,OACE,kBAACL,EAAD,CACEG,OAAQE,EAAMF,OACdG,QAAS,kBAAMD,EAAME,SAASF,EAAMF,UAEpC,+BACA,+BACA,iC,qxCCvCN,IAAMK,EAAaP,IAAOC,IAAV,KAGZ,qBAAGC,QAAa,+CAWhBM,IAAiBC,WAQfD,IAAiBC,WAMjBD,IAAiBC,YAQjB,qBAAGP,OAAoB,kCAGvBM,IAAiBC,WAQfD,IAAiBC,WAUfD,IAAiBC,WASfD,IAAiBC,YA4CdC,UA7BuB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAC/BC,oBAAS,GADsB,mBAClDV,EADkD,KAC1CI,EAD0C,KAGzD,OACE,oCACE,kBAACC,EAAD,CAAYL,OAAQA,GAElB,yBAAKW,IAAKC,IAAMC,IAAI,SAGpB,yBAAKC,UAAU,WACb,kBAAC,EAAD,CAAWZ,MAAO,CAAEF,SAAQI,cAI9B,yBAAKU,UAAU,eACb,4BACGL,EAAYM,KAAI,SAAAC,GAAI,OACnB,wBAAIC,IAAKD,EAAKE,OACZ,uBAAGC,KAAMH,EAAKG,MAAOH,EAAKE","file":"static/js/6.eea8e33b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/footer.50efe035.webp\";","import React from 'react'\nimport styled from '@emotion/styled'\n\nimport { HamburgerProps, NavbarMainProps } from '../react-app-env'\n\nconst HamburgerMain = styled.div<NavbarMainProps>`\n  position: relative;\n  width: 30px;\n  height: 20px;\n\n  span {\n    display: block;\n    height: 3px;\n    width: 100%;\n    background: #333;\n    position: absolute;\n    left: 0;\n    transition: all ease-in-out 250ms;\n\n    :nth-of-type(1) {\n      top: ${({ isOpen }) => (isOpen ? '10px' : '0')};\n      transform: ${({ isOpen }) =>\n        isOpen ? 'rotate(135deg)' : 'rotate(0deg)'};\n    }\n\n    :nth-of-type(2) {\n      top: 10px;\n      left: ${({ isOpen }) => (isOpen ? '-35px' : '0')};\n      opacity: ${({ isOpen }) => (isOpen ? '0' : '1')};\n    }\n\n    :nth-of-type(3) {\n      top: ${({ isOpen }) => (isOpen ? '10px' : '20px')};\n      transform: ${({ isOpen }) =>\n        isOpen ? 'rotate(-135deg)' : 'rotate(0deg)'};\n    }\n  }\n`\n\nexport const Hamburger: React.FC<HamburgerProps> = ({ state }) => {\n  return (\n    <HamburgerMain\n      isOpen={state.isOpen}\n      onClick={() => state.setOpen(!state.isOpen)}\n    >\n      <span />\n      <span />\n      <span />\n    </HamburgerMain>\n  )\n}\n","import React, { useState } from 'react'\nimport styled from '@emotion/styled'\n\nimport Logo from '../static/Footer/footer.webp'\nimport { NavbarProps, NavbarMainProps } from '../react-app-env'\nimport { Hamburger } from './hamburger'\nimport { browserQueryRule } from '../utils'\n\nconst NavbarMain = styled.div<NavbarMainProps>`\n  box-sizing: border-box;\n  background: #fff;\n  ${({ isOpen }) => !isOpen && `box-shadow: 0 1px 1px hsla(0, 0%, 0%, 3%);`}\n  padding: 10px 20px;\n  display: flex;\n  flex-flow: wrap;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  z-index: 200;\n\n  ${browserQueryRule.largePhone} {\n    padding: 0 15px;\n  }\n\n  > img {\n    width: 35px;\n    height: 48px;\n\n    ${browserQueryRule.largePhone} {\n      display: none;\n    }\n  }\n\n  .hamburg {\n    ${browserQueryRule.largePhone} {\n      display: none;\n    }\n  }\n\n  .navbar-link {\n    flex: 1 0 100%;\n    overflow: hidden;\n    ${({ isOpen }) => (isOpen ? `height: 150px;` : `height: 0px;`)}\n    transition: height ease-in-out 350ms;\n\n    ${browserQueryRule.largePhone} {\n      height: auto;\n    }\n\n    ul {\n      margin: 0;\n      padding: 0;\n\n      ${browserQueryRule.largePhone} {\n        text-align: center;\n        padding-top: 5px;\n      }\n\n      li {\n        list-style: none;\n        padding: 10px 0;\n        text-align: right;\n\n        ${browserQueryRule.largePhone} {\n          padding: 14px 15px;\n          display: inline-block;\n        }\n\n        a {\n          color: rgba(0, 0, 0, 0.5);\n          text-decoration: none;\n\n          ${browserQueryRule.largePhone} {\n            color: #000;\n            font-size: 0.875rem;\n            font-family: 'TATSanaChon';\n          }\n\n          :focus {\n            color: #000;\n          }\n        }\n      }\n    }\n  }\n`\n\nconst Navbar: React.FC<NavbarProps> = ({ navbarItems }) => {\n  const [isOpen, setOpen] = useState(false)\n\n  return (\n    <>\n      <NavbarMain isOpen={isOpen}>\n        {/* Logo */}\n        <img src={Logo} alt='logo' />\n\n        {/* Hamburger */}\n        <div className='hamburg'>\n          <Hamburger state={{ isOpen, setOpen }} />\n        </div>\n\n        {/* Navbar Item */}\n        <div className='navbar-link'>\n          <ul>\n            {navbarItems.map(item => (\n              <li key={item.label}>\n                <a href={item.href}>{item.label}</a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </NavbarMain>\n    </>\n  )\n}\n\nexport default Navbar\n"],"sourceRoot":""}